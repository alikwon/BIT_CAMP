<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 1. mapper의 namespace 필수: interface의 fullname으로 -->
<mapper namespace="com.aia.mangch.dao.ChatDao">
	<resultMap id="chatRoomInfo" type="com.aia.mangch.model.ChatRoomInfo">
		<id property="idx" column="room_idx" />
		<result property="reqIdx" column="request_idx" />
		<result property="reqTitle" column="request_title" />
		<result property="mbNick1" column="member1" />
		<result property="mbNick2" column="member2" />
		<result property="delUser" column="room_delUser"/>
	</resultMap>
	<resultMap id="chatMsgInfo" type="com.aia.mangch.model.ChatMsgInfo">
		<id property="idx" column="room_idx" />
		<result property="roomIdx" column="room_idx" />
		<result property="sender" column="member_nick" />
		<result property="receiver" column="msg_receiver" />
		<result property="text" column="msg_text" />
		<result property="img" column="msg_img" />
		<result property="date" column="msg_date" />
		<result property="readChk" column="msg_readcheck" />
	</resultMap>
	<resultMap id="newMsgForBadge" type="com.aia.mangch.model.NewMsgForBadge">
		<result property="roomIdx" column="room_idx" />
		<result property="newMsgCount" column="newMsgCount" />
	</resultMap>
	
	<!-- 채팅방 리스트 -->
	<select id="selectChatRoomList"
			resultMap="chatRoomInfo"
			parameterType="String">
		SELECT * 
		FROM Mangchi.chat_room 
		WHERE (room_delUser IS NULL OR room_delUser!=#{nick})
		AND (member1=#{nick} OR member2=#{nick})
		ORDER BY room_update DESC;
	</select>
	
	<!-- 채팅방리스트출력에 필요한 게시글 제목 -->
	<select id="getRequestTitle"
			resultType="String">
		SELECT request_title
		FROM Mangchi.request_list
		WHERE request_idx = #{reqIdx}
	</select>
	
	<select id="selectRoomList"
			parameterType="java.util.List"
			resultType="com.aia.mangch.model.RequestTitleInfo">
		SELECT request_idx,request_title
		FROM Mangchi.request_list
		WHERE request_idx IN
		<foreach collection="list" item="item" open="(" close=")"
				 separator=",">
		#{item.reqIdx}
		</foreach>
	</select>
	<!-- 채팅방의 메세지리스트 -->
	<select id="selectMsgList"
			resultMap="chatMsgInfo">
		SELECT *
		FROM (
			SELECT * 
			FROM Mangchi.chat_room r NATURAL JOIN Mangchi.chat_msg m
			WHERE m.room_idx=#{param1}) e
		WHERE e.room_delUser IS NULL OR e.room_delUser != #{param2}
		ORDER BY msg_date;
	</select>
	
	<!-- 읽음으로 변경 -->
	<update id="readMsg">
		UPDATE Mangchi.chat_msg 
		SET msg_readcheck =1 
		WHERE msg_receiver=#{param1} and room_idx=#{param2}
	</update>
	
	<!-- 새로운 메세지 카운트 -->
	<select id="newMsgList"
			resultType="com.aia.mangch.model.NewMsgForBadge">
		SELECT room_idx roomIdx,count(msg_readcheck) newMsgCount
		FROM Mangchi.chat_msg 
		WHERE msg_readcheck=0 and msg_receiver=#{param1} 
		GROUP BY room_idx;  
	</select>
	
	<!-- 새로운 메세지 입력 -->
	<insert id="insertMsg"
			parameterType="com.aia.mangch.model.ChatMsgInfo">
		INSERT INTO Mangchi.chat_msg 
		(room_idx,member_nick,msg_receiver,msg_text) 
		VALUES (#{roomIdx},#{sender},#{receiver},#{text})
	</insert>
	<!-- 이미지가 있을때 -->
	<insert id="insertMsgWithImg"
			parameterType="com.aia.mangch.model.ChatMsgInfo">
		INSERT INTO Mangchi.chat_msg 
		(room_idx,member_nick,msg_receiver,msg_img) 
		VALUES(#{roomIdx},#{sender},#{receiver},#{img})
	</insert>
	
	<!--채팅방이 없으면 채팅방 생성 -->
	<insert id="createChatRoom"
			parameterType="com.aia.mangch.model.ChatRoomInfo"
			useGeneratedKeys="true"
			keyProperty="idx">
		INSERT INTO Mangchi.chat_room 
		(request_idx, member1,member2) 
		VALUES(#{reqIdx},#{mbNick1},#{mbNick2})
	</insert>
	
	<!-- 새로운 메세지 입력시 채팅방 시간 업데이트 -->
	<update id="updateRoomDate">
		UPDATE Mangchi.chat_room 
		SET room_update = now() 
		WHERE room_idx=#{roomIdx}
	</update>
	
	<!-- 채팅방삭제 전에 해당채팅방에서 주고받은 사진지우기위해 경로가져오기 -->
	<!-- <select id="getMsgImgPath"
			resultType="String">
		SELECT * 
		FROM Mangchi.chat_msg 
		WHERE room_idx=#{roomIdx}
		AND msg_img IS NOT NULL
	</select> -->
	
	<!-- 채팅방삭제 -->
	<delete id="delChatRoom"
			parameterType="com.aia.mangch.model.DelChatRoomInfo">
		DELETE FROM Mangchi.chat_room
		WHERE room_idx=#{roomIdx} 
	</delete>
	
	<!-- 내가먼저 삭제한거면 삭제유저 컬럼에 내이름 업데이트 -->
	<update id="updateDelUser">
		UPDATE Mangchi.chat_room 
		SET room_delUser = #{loginUser}
		WHERE room_idx=#{roomIdx}
	</update>
	
	
</mapper>